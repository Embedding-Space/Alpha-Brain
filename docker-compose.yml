name: alpha-brain

x-shared-env: &shared-env
  HELPER_MODEL: gemma3:4b

services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: alpha-brain-postgres
    environment:
      POSTGRES_USER: alpha
      POSTGRES_PASSWORD: brain
      POSTGRES_DB: alpha_brain
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups  # For automated backups
    networks:
      - alpha-brain-network
    # No exposed ports - only internal access
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alpha -d alpha_brain"]
      interval: 5s
      timeout: 5s
      retries: 5

  embedding-service:
    build:
      context: .
      dockerfile: Dockerfile.embedding
    container_name: alpha-brain-embeddings
    networks:
      - alpha-brain-network
    ports:
      - "8001:8001"  # Temporarily exposed for data import
    volumes:
      # Share model cache with host
      - ~/.cache/huggingface:/root/.cache/huggingface
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # Run database migrations before starting the main service
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alpha-brain-migrate
    entrypoint: []  # Override the default FastMCP entrypoint
    command: ["uv", "run", "alembic", "upgrade", "head"]
    environment:
      <<: *shared-env
      DATABASE_URL: postgresql://alpha:brain@postgres:5432/alpha_brain
      OPENAI_BASE_URL: http://host.docker.internal:11434/v1
      OPENAI_API_KEY: not-needed
      EMBEDDING_SERVICE_URL: http://embedding-service:8001
    networks:
      - alpha-brain-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini:ro
    restart: "no"  # Run once and exit

  alpha-brain-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alpha-brain-mcp
    environment:
      <<: *shared-env
      DATABASE_URL: postgresql://alpha:brain@postgres:5432/alpha_brain
      OPENAI_BASE_URL: http://host.docker.internal:11434/v1
      OPENAI_API_KEY: not-needed
      EMBEDDING_SERVICE_URL: http://embedding-service:8001
    ports:
      - "9100:9100"  # Single exposed port for MCP HTTP
    networks:
      - alpha-brain-network
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      embedding-service:
        condition: service_healthy
    # Development bind mounts - comment out for production
    volumes:
      - ./src/alpha_brain:/app/src/alpha_brain:ro
      - ./pyproject.toml:/app/pyproject.toml:ro
      # Cache directories for models (default location)
      - model_cache:/root/.cache
    healthcheck:
      test: ["CMD", "python", "-m", "alpha_brain.health", "http://localhost:9100/mcp/"]
      interval: 5s
      timeout: 10s
      retries: 12
      start_period: 10s
    restart: unless-stopped

  # Test containers - completely isolated from production
  test-postgres:
    image: pgvector/pgvector:pg17
    container_name: alpha-brain-test-postgres
    profiles: ["test"]  # Only starts when explicitly requested
    environment:
      POSTGRES_USER: alpha
      POSTGRES_PASSWORD: brain
      POSTGRES_DB: alpha_brain_test  # Test database name
    networks:
      - alpha-brain-network
    volumes:
      # Mount our test dataset for restore operations
      - ./.local/test_dataset.dump.gz:/app/.local/test_dataset.dump.gz:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alpha -d alpha_brain_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Run test migrations
  test-migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alpha-brain-test-migrate
    profiles: ["test"]
    entrypoint: []  # Override the default FastMCP entrypoint
    command: ["uv", "run", "alembic", "upgrade", "head"]
    environment:
      <<: *shared-env
      DATABASE_URL: postgresql://alpha:brain@test-postgres:5432/alpha_brain_test
      OPENAI_BASE_URL: http://host.docker.internal:11434/v1
      OPENAI_API_KEY: not-needed
      EMBEDDING_SERVICE_URL: http://embedding-service:8001
    networks:
      - alpha-brain-network
    depends_on:
      test-postgres:
        condition: service_healthy
    volumes:
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini:ro
    restart: "no"

  test-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alpha-brain-test-mcp
    profiles: ["test"]  # Only starts when explicitly requested
    environment:
      <<: *shared-env
      DATABASE_URL: postgresql://alpha:brain@test-postgres:5432/alpha_brain_test
      OPENAI_BASE_URL: http://host.docker.internal:11434/v1
      OPENAI_API_KEY: not-needed
      LOG_LEVEL: DEBUG
      EMBEDDING_SERVICE_URL: http://embedding-service:8001  # Uses main embedder!
    ports:
      - "9101:9100"
    networks:
      - alpha-brain-network
    depends_on:
      test-migrate:
        condition: service_completed_successfully
      test-postgres:
        condition: service_healthy
      embedding-service:
        condition: service_healthy
    volumes:
      - ./src/alpha_brain:/app/src/alpha_brain:ro
      - ./pyproject.toml:/app/pyproject.toml:ro
      - ./.local/test_dataset.dump.gz:/app/.local/test_dataset.dump.gz:ro
      - model_cache:/root/.cache
    healthcheck:
      test: ["CMD", "python", "-m", "alpha_brain.health", "http://localhost:9100/mcp/"]
      interval: 5s
      timeout: 10s
      retries: 12
      start_period: 10s
    restart: "no"

  # Ofelia - Job scheduler for automated backups
  # Runs hourly backups (48hr retention) and daily checkpoints (permanent)
  ofelia:
    image: mcuadros/ofelia:latest
    container_name: alpha-brain-ofelia
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./ofelia.ini:/etc/ofelia/config.ini:ro
      - ./backups:/backups  # Shared with postgres for backups
    networks:
      - alpha-brain-network
    command: daemon --config=/etc/ofelia/config.ini
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  model_cache:
  # redis_data:

networks:
  alpha-brain-network:
    driver: bridge